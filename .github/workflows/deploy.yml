name: Build and Deploy to Dockploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # âœ… Setup Docker Buildx with container driver
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
        driver-opts: network=host

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}

    # âœ… Build and push with cache support
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        # âœ… GitHub Actions cache (works with container driver)
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Deploy to Dokploy
      run: |
        response=$(curl -X POST \
        "${{ secrets.DOKPLOY_URL }}/api/application.deploy" \
        -H 'accept: application/json' \
        -H "x-api-key: ${{ secrets.DOKPLOY_AUTH_TOKEN }}" \
        -H 'Content-Type: application/json' \
        -d '{"applicationId": "${{ secrets.DOKPLOY_APPLICATION_ID }}"}' \
        -w "%{http_code}" \
        -o /dev/null \
        -s)

        if [ "$response" -ne 200 ]; then
        echo "Deployment failed with status code: $response"
        exit 1
        else
        echo "Deployment triggered successfully! ðŸŽ‰"
        fi% 
